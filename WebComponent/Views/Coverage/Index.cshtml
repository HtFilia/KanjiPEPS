@model WebComponent.Models.PriceFormModel

@{
    ViewBag.Title = "Index";
}

@{
    using (Html.BeginForm("Index", "Coverage", FormMethod.Post))
    {
        <label>Choisissez une fréquence de rebalancement :</label>
        @Html.TextBox("Freq", null, new { @class = "form-control" })
        <label>Choisissez une fenêtre d'estimation :</label>
        @Html.TextBox("EstimationWindow", null, new { @class = "form-control" })
        <input type="submit" value="Me Couvrir" />
        <span style="color:red">@ViewBag.MessageErr</span>
    }
}
@if (ViewBag.Posted)
{
    <script>
        console.log(@ViewBag.Freq)
        console.log(@ViewBag.EstWindow)
    </script>
}
<div class="row">
    <div class="col-xl-8 mb-5 mb-xl-0">
        <div class="card bg-gradient-default shadow">
            <div class="card-header bg-transparent">
                <div class="row align-items-center">
                    <div class="col">
                        <h2 class="text-white mb-0">Couverture du produit Kanji</h2>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="chart">
                    <div class="chartjs-size-monitor">
                        <div class="chartjs-size-monitor-expand">
                            <div class=""></div>
                        </div>
                        <div class="chartjs-size-monitor-shrink">
                            <div class=""></div>
                        </div>
                    </div>
                    <script>
                            window.onload = function () {

                            var chartPie = new CanvasJS.Chart("pie-coverage", {
                                theme: "light2", // "light1", "light2", "dark1", "dark2"
                                exportEnabled: true,
                                animationEnabled: true,
                                title: {
                                    text: "Portefeuille de couverture"
                                },
                                data: [{
                                    type: "pie",
                                    startAngle: 25,
                                    toolTipContent: "<b>{label}</b>: {y}%",
                                    showInLegend: "true",
                                    legendText: "{label}",
                                    indexLabelFontSize: 16,
                                    indexLabel: "{label} - {y}%",
                                    dataPoints: @Html.Raw(ViewBag.PercentageCoverage)
                                }]
                            });

                                var chartLine = new CanvasJS.Chart("chartContainer", {
                                animationEnabled: true,
                                    axisY: {
                                        includeZero: false
                                    },
                                    toolTip: {
                                    shared: true
                                    },
                                    data: [{
                                        type: "line",
                                        name: "Kanji",
                                        showInLegend: true,
                                        dataPoints: @Html.Raw(ViewBag.PrixKanji)
                                    }, {
                                        type: "line",
                                        name: "Portefeuille de couverture",
                                        showInLegend: true,
                                        dataPoints: @Html.Raw(ViewBag.CouvertureKanji)
                                    }]
                                });

                                chartLine.render();
                                chartPie.render();

                            }
                    </script>
                    <div id="chartContainer" style="height: 370px; width: 100%;"></div>
                    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
                    <div id="chartContainer" style="height: 370px; width: 100%;"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-4 mb-3 mb-xl-0">
        <div id="ctrl-buttons">
            <button type="button" class="btn btn-outline-primary active show">Actuel</button>
            <button type="button" class="btn btn-outline-primary">Passé</button>
        </div>
        <div id="pie-coverage" style="height: 370px; width: 100%;"></div>
    </div>
</div>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script>

    let buttonCurrent = document.getElementById('ctrl-buttons').childNodes[1]
    let buttonPast = document.getElementById('ctrl-buttons').childNodes[3]

    buttonCurrent.onclick = function () {
        changeActive(this)
		var chart = new CanvasJS.Chart("pie-coverage", {
                                theme: "light2", // "light1", "light2", "dark1", "dark2"
                                exportEnabled: true,
                                animationEnabled: true,
                                title: {
                                    text: "Portefeuille de couverture"
                                },
                                data: [{
                                    type: "pie",
                                    startAngle: 25,
                                    toolTipContent: "<b>{label}</b>: {y}%",
                                    showInLegend: "true",
                                    legendText: "{label}",
                                    indexLabelFontSize: 16,
                                    indexLabel: "{label} - {y}%",
                                    dataPoints: @Html.Raw(ViewBag.PercentageCoverage)
                                }]
                            });

        chart.render();
    }

    buttonPast.onclick = function () {
        changeActive(this)
		var chart = new CanvasJS.Chart("pie-coverage", {
                                    title: {
                                        text: "Evolution des Deltas"
                                    },
                                    theme: "light2", // "light1", "light2", "dark1", "dark2"
                                    animationEnabled: true,
                                    toolTip: {
                                        shared: true
                                    },
                                    data: [
                                        {
                                            type: "stackedArea100",
                                            name: "HangSeng",
                                            xValueFormatString: "MMM, YYYY",
                                            showInLegend: "true",
                                            dataPoints: @Html.Raw(ViewBag.DeltasHG)
                                        },
                                        {
                                            type: "stackedArea100",
                                            name: "Euronext",
                                            showInLegend: "true",
                                            dataPoints: @Html.Raw(ViewBag.DeltasEur)
                                        },
                                        {
                                            type: "stackedArea100",
                                            name: "S&P500",
                                            showInLegend: "true",
                                            dataPoints: @Html.Raw(ViewBag.DeltasSP)
                                        }
                                    ]

});
chart.render();
    }

    function changeActive(a) {
        $(a).parent().children("button").each(function () {
			$(this).removeClass("active show")
        })
		$(a).addClass("active show")
    }

</script>
